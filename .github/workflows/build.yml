# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: Use Latest Node.js
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Adjust the release permissions
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        run: chmod a+x ./scripts/release.sh

      - name: Install semantic release
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        run: npm i --location=global semantic-release @semantic-release/commit-analyzer @semantic-release/github @semantic-release/changelog @semantic-release/exec semantic-release-export-data

      - run: npx semantic-release --dry-run
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}

      - name: Needs Release?
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        run: echo "Needs release published? ${{ steps.get-next-version.outputs.new-release-published }}"

      - name: Release
        if: ${{ runner.os == 'Linux' && matrix.java == '17' && (steps.get-next-version.outputs.new-release-published == 1)  }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
        run: npx semantic-release

      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' && (steps.get-next-version.outputs.new-release-published == 1) }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: build/libs/

      - uses: Kir-Antipov/mc-publish@v3.3
        name: Release Main Version
        if: ${{ github.ref_name == 'main' && matrix.java == '17' && runner.os == 'Linux' && (steps.get-next-version.outputs.new-release-published == 1) }}
        with:
          version-type: release
          name: ""
          modrinth-id: ${{ vars.MODRINTH_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          changelog-file: CHANGELOG.*
          files: build/libs/!(*-@(dev|sources|all)).jar
          loaders: |
            fabric
          game-versions: |
            >=1.20
          java: |
            17
          dependencies: |
            fabric-api | depends
            modmenu | depends
            cloth-config | depends
          version-resolver: latest
          game-version-filter: releases

      - uses: Kir-Antipov/mc-publish@v3.3
        name: Release Beta Version
        if: ${{ github.ref_name == 'beta' && matrix.java == '17' && runner.os == 'Linux' && (steps.get-next-version.outputs.new-release-published == 1) }}
        with:
          version-type: beta
          name: ""
          modrinth-id: ${{ vars.MODRINTH_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          changelog-file: CHANGELOG.*
          files: build/libs/!(*-@(dev|sources|all)).jar
          loaders: |
            fabric
          game-versions: |
            >=1.20
          java: |
            17
          dependencies: |
            fabric-api | depends
            modmenu | depends
            cloth-config | depends
          version-resolver: latest
          game-version-filter: releases

      - uses: Kir-Antipov/mc-publish@v3.3
        name: Release Alpha Version
        if: ${{ github.ref_name == 'alpha' && matrix.java == '17' && runner.os == 'Linux' && (steps.get-next-version.outputs.new-release-published == 1) }}
        with:
          version-type: alpha
          name: ""
          modrinth-id: ${{ vars.MODRINTH_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          changelog-file: CHANGELOG.*
          files: build/libs/!(*-@(dev|sources|all)).jar
          loaders: |
            fabric
          game-versions: |
            >=1.20
          java: |
            17
          dependencies: |
            fabric-api | depends
            modmenu | depends
            cloth-config | depends
          version-resolver: latest
          game-version-filter: releases
